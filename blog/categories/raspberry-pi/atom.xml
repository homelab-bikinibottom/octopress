<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Raspberry Pi | @octopress]]></title>
  <link href="http://blog.eamca.com/blog/categories/raspberry-pi/atom.xml" rel="self"/>
  <link href="http://blog.eamca.com/"/>
  <updated>2014-09-13T17:19:25+10:00</updated>
  <id>http://blog.eamca.com/</id>
  <author>
    <name><![CDATA[spondbob]]></name>
    <email><![CDATA[spondbob@eamca.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi Networking]]></title>
    <link href="http://blog.eamca.com/blog/2014/raspberry-pi-networking/"/>
    <updated>2014-09-13T17:05:47+10:00</updated>
    <id>http://blog.eamca.com/blog/2014/raspberry-pi-networking</id>
    <content type="html"><![CDATA[<p>I used to have troubles to set my Raspberry Pi to get connected to the existing network because I do not have keyboard and monitor to directly access it. The only thing I can do is plug off the sdcard and insert it into my laptop to get access to the OS.</p>

<p>But, my laptop is running on Windows, it does not recognize EXT partition. So, I can not easily modify the network configuration of the system. However, there is one partition on the sdcard that based on FAT32 which is can be easily read and write by Windows. This partition is boot partition. Now, I will show you how I can easily set up my network connection, whether to connect to LAN cable, existing WiFi, or even set my own access point!</p>

<!-- more -->


<p>Before we begin, you might need to check my <a href="http://blog.eamca.com/blog/2014/bikinibottom/">Raspberry Pi&rsquo;s specification</a> beforehand.</p>

<p>The idea is a service will read a configuration file located in FAT32 partition during boot time. This will allow us to easily modify the configuration file before the Raspberry Pi is booted. Basically there 3 are steps to set this up.</p>

<ol>
<li><p>Create service</p>

<p>This is my simple service script located at <code>/etc/systemd/system/</code>. While booting, this service will execute a &ldquo;reader&rdquo; script.
<script src="http://gist-it.eamca.com/github/spondbob/bikinibottom-mode/raw/master/bikinibottom-mode.service"></script></p></li>
<li><p>Create the reader</p>

<p>This reader file is to decide which network configuration going to be used. The reader reads a textfile which called MODE.txt file. Basically, MODE file contains the filename of the configuration files which will be executed by this reader.
<script src="http://gist-it.eamca.com/github/spondbob/bikinibottom-mode/raw/master/bikinibottom-mode.sh"></script>
Put it in a <code>your_filename.service</code> then enable it by <code>#systemctl enable your_filename</code>. And here is a minimal MODE file as a switch.
<script src="http://gist-it.eamca.com/github/spondbob/bikinibottom-mode/raw/master/MODE.txt"></script></p></li>
<li><p>Last but not least, the configurations</p>

<p>Basically you can put anything what you like here, as long as the file name is included in MODE.txt to be executed when booting. Here I provide some of my network configuration.</p>

<p>Static IP for LAN interface enables direct access to the pi.
<script src="http://gist-it.eamca.com/github/spondbob/bikinibottom-mode/raw/master/scripts/eth0.sh"></script></p>

<p>Wireless configuration to connect to existing WiFi. Use <code>wpa_passphrase your_SSID your_password</code> to setup the profile.
<script src="http://gist-it.eamca.com/github/spondbob/bikinibottom-mode/raw/master/scripts/wlan0.sh"></script></p>

<p>Setup access point with <a href="https://github.com/oblique/create_ap">ap_create</a>
<script src="http://gist-it.eamca.com/github/spondbob/bikinibottom-mode/raw/master/scripts/ap.sh"></script></p></li>
</ol>


<p>You might take a look <a href="https://github.com/spondbob/bikinibottom-mode/">the complete project</a> on my Github. Feel free to drop a message if you got any questions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bikinibottom]]></title>
    <link href="http://blog.eamca.com/blog/2014/bikinibottom/"/>
    <updated>2014-09-05T17:30:57+10:00</updated>
    <id>http://blog.eamca.com/blog/2014/bikinibottom</id>
    <content type="html"><![CDATA[<p>This page is specifically introduced my Raspberry Pi, bikinibottom, with its functionalities and features. Since at the time this page is written, bikinibottom is a Raspberry Pi runs Arch Linux ARM. Its mainly usage is as a standalone development server.</p>

<!-- more -->


<p>The attached hardware is listed as follows:</p>

<ul>
<li>Raspberry Pi Model B</li>
<li>SanDisk Ultra SDHC Card 16GB</li>
<li>Nano USB WiFi EDIMAX EW-7811Un</li>
<li>Power adaptor 750mA, 1A, and 2A</li>
</ul>


<p>The most usage applications are:</p>

<ul>
<li>Web servers: apache2, nginx</li>
<li>Database servers: postgre, MongoDB</li>
<li>Programming languages: PHP, python, ruby (on Rails)</li>
<li>Multimedia: omxplayer, mopidy</li>
<li>Torrent: rutorrent</li>
<li>Other: rvm, git, tmuxinator</li>
</ul>


<p>Partition table:
```
Disk /dev/mmcblk0: 14.9 GiB, 15931539456 bytes, 31116288 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x417ee54b</p>

<p>Device         Boot  Start      End  Sectors  Size Id Type
/dev/mmcblk0p1        2048   186367   184320   90M  c W95 FAT32 (LBA)
/dev/mmcblk0p2      186368 31116287 30929920 14.8G  5 Extended
/dev/mmcblk0p5      188416 31116287 30927872 14.8G 83 Linux
```</p>
]]></content>
  </entry>
  
</feed>
